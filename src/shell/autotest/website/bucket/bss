######################################
# 
# 脚本名称: bss_test
#
# 目的:
#    1、测试bss接口
# 
# 注意事项：
#    不能单独执行，通过loadtestbucket调用
#    先在mysql里设置允许远程访问的权限，在运维服务器和企业服务器的mysql中执行一下语句，授权测试机器访问mysql数据库
#    grant all on *.* to root@10.0.0.40 identified by 'C1oudP8x&2017' with grant option;
# 作者:cxl
# 
######################################

# 测试名称
testDesc="bss自动化测试"
# 配置信息
maintenance_ip="10.0.0.23"
enterprise_ip="10.0.0.23"
# 测试的省份
# test_province="chongqing hebei jiangsu liaoning shaanxi anhui guizhou"
test_province="liaoning"
# 执行的sql语句
sql_change_tk_province="update talk.talk_param set \\\`value\\\`='EMIC_NEED_REPLACE_PROVINCE' where \\\`key\\\`='server_province';"
sql_change_mt_province="update maintenance.m_system_param set m_value='EMIC_NEED_REPLACE_PROVINCE' where m_key='server_province';"
sql_count_mt_pubaccount="select count(*) from maintenance.m_pub_account where area_code='EMIC_NEED_REPLACE_AREACODE' and outside_number='EMIC_NEED_REPLACE_OUTSIDENUMBER';"
# 测试的号码
test_switch_number='11111111'
test_direct_number='22222222'
test_meet_number='33333333'
province_name=''
province=''
areacode='025'
i=0
md5Str=`md5_str "$cq_bss_pwd" "true"`

cqRequestFinalStr='{"UNI_AIM_HEAD":{"TIMESTAMP":"$dateTest","SERVICE_NAME":"siBusiOrderOpen","TRANS_ID":"100"},"UNI_AIM_BODY":"EMIC_NEED_REPLACE","UNI_AIM_ATTACHED":{"MEDIA_INFO":""}}'
cqRequestStr='{"OrderInfo":{"EMIC_NEED_REPLACE"}}'
cqResponseFinalStr='{"UNI_AIM_HEAD":{"RESP_CODE ":"00000","RESP_DESC ": "Success"},"UNI_AIM_BODY": "EMIC_NEED_REPLACE",,"UNI_AIM_ATTACHED":{"MEDIA_INFO":""}}'
cqResponseStr='{"ResultInfo": {"ResultCode": "EMIC_NEED_REPLACE_CODE","ResultMsg": "EMIC_NEED_REPLACE_MSG"}}'


# curl -d "Operate=createswitchboard&EpName=天天向上&Number=0257777777&MaxMember=33" http://112.80.5.155:1046/Api/Bss/bssHttp

# 测试用例准备函数
bss(){
    local sql="use maintenance"
    local status=1
    # 修改mysql地址为运维ip
    mysql_host="$maintenance_ip"
    emic_eval_mysql "$sql" && status=0 || status=1
    if [ $status -gt 0 ] 
    then 
        print_log "无法连接到mysql" "error"
        let "totalFailTmp++"
        return $status
    fi
    return $status
}

# 测试主进程
bss_testbucket(){
    local sql
    local status=1
    for province in $test_province
    do
        province_name=`emic_get_province "$province"`
        areacode=`emic_get_areacode "$province"`
        print_log "正在测试省份 $province_name " info
        sql=${sql_change_mt_province/EMIC_NEED_REPLACE_PROVINCE/$province}
        # 修改mysql地址为运维ip
        mysql_host="$maintenance_ip"
        emic_eval_mysql "$sql" && status=0 || status=1
        if [ $status -gt 0 ] 
        then 
            print_log "无法连接到mysql" "error"
            let "totalFailTmp++"
        fi
        if [ $status = 0 ]
        then
            sql=${sql_change_tk_province/EMIC_NEED_REPLACE_PROVINCE/$province}
            # 修改mysql地址为企业ip
            mysql_host="$enterprise_ip"
            emic_eval_mysql "$sql" && status=0 || status=1
        fi
        if [ $status -gt 0 ] 
        then 
            print_log "无法连接到mysql" "error"
            let "totalFailTmp++"
        fi
        if [ $status = 0 ]
        then
            createswitchboard
        fi
        echo ""
    done
    return $status
}
# 发送bss请求
send_bss_request(){
    local status=1    
    local bssUrl="http://${maintenance_ip}:1046/Api/Bss/bssHttp"
    local resultFile=`make_tmp_file ".result"`
    local reqJson
    local retJson
    local retVal
    local retMsg
    if [ -z "$1" ] ; then return $status; fi
    case "$province" in       
        hebei) 
            emic_eval_command "curl -s -H \"Content-Type: text/xml; charset=utf-8\" -d '$1' $bssUrl" "$resultFile" && status=0 || status=1
            if [ $status -gt 0 ] ; then return 1; fi 
            # 解析xml获取返回值
            retVal=`cat $resultFile | sed 's/<OrderList.*>/<OrderList>/g' | sed 's/<ClientInfoResponse.*>/<ClientInfoResponse>/g' | sed 's/<NumberInfoResponse.*>/<NumberInfoResponse>/g' | sed 's/<NumberStsResponse.*>/<NumberStsResponse>/g' | sed 's/<MobileInfoResponse.*>/<MobileInfoResponse>/g' | xmlstarlet sel -t -v "//ReturnCode"`     
            if [ -n "$retVal" ] && [ "$retVal" == "0" ]
            then
                status=0
            else
                retMsg=`cat $resultFile | sed 's/<OrderList.*>/<OrderList>/g' | sed 's/<ClientInfoResponse.*>/<ClientInfoResponse>/g' | sed 's/<NumberInfoResponse.*>/<NumberInfoResponse>/g' | sed 's/<NumberStsResponse.*>/<NumberStsResponse>/g' | sed 's/<MobileInfoResponse.*>/<MobileInfoResponse>/g' | xmlstarlet sel -t -v "//ReturnMessage"`
                print_log "------ 返回失败[原因]$retMsg" error
            fi 
            ;;        
        chongqing)
            emic_eval_command "curl -s -H \"Content-type:application/json; charset=UTF-8\" -H \"Accept:application/json\"  -d '$1'  $bssUrl" "$resultFile" && status=0 || status=1
            if [ $status -gt 0 ] ; then return 1; fi
            # 解析json获取返回值
            retJson=`cat $resultFile | jq '.UNI_AIM_BODY'| sed 's/"//g'`
            retVal=`cq_decrypt_str "$retJson" "$md5Str" | jq '.ResultInfo.ResultCode' | sed 's/"//g'`
            if [ -n "$retVal" ] && [ "$retVal" == "0000" ]
            then
                status=0
            else
                retMsg=`cq_decrypt_str "$retJson" "$md5Str" | jq '.ResultInfo.ResultMsg' | sed 's/"//g'`
                print_log "------ 返回失败[原因]$retMsg" error
            fi
            ;;
        *)
            emic_eval_command "curl -s -d '$1' $bssUrl" "$resultFile" && status=0 || status=1
            if [ $status -gt 0 ] ; then return 1; fi 
            # 解析json获取返回值
            retVal=`cat $resultFile | jq '.status' | sed 's/"//g'`
            if [ -n "$retVal" ] && [ "$retVal" == "0" ]
            then
                status=0
            else
                retMsg=`cat $resultFile | jq '.info' | sed 's/"//g'`
                print_log "------ 返回失败[原因]$retMsg" error
            fi
            ;;
    esac
    rm $resultFile -rf
    return $status
}

createswitchboard(){
    print_log "--正在测试【新装总机】测试" "info"
    local number="$areacode$test_switch_number"
    local maxMember=66
    local epName="我们是害虫[$province_name]"
    local epCode="1000$i"
    let "i++"
    local status=1
    local paramter
    local resultFile
    local checkCount
    case "$province" in                      
        chongqing) 
            paramter="Operate=createswitchboard&EpName=${epName}&Number=${number}&MaxMember=${maxMember}"
            paramter=${cqRequestStr/EMIC_NEED_REPLACE/$paramter}
            paramter=`parse_to_json "$paramter"`
            local paramter=`cq_encrypt_str "$paramter" "$md5Str"` && status=0 || status=1
            if [ $status -gt 0 ] 
            then
                print_log "------ [新装总机]加密提交数据失败 " "error"
                let "totalFailTmp++"
                return $status
            fi
            paramter=${cqRequestFinalStr/EMIC_NEED_REPLACE/"$paramter"}
            ;; 
        hebei) 
            #河北先调用clientinfo再调用numberinfo完成开户
            paramter=`cat testfile/hb_clientinfo.xml|tr "\n" " "`
            paramter=${paramter/EMIC_NEED_REPLACE_EPNAME/$epName}
            paramter=${paramter/EMIC_NEED_REPLACE_EPCODE/$epCode}
            send_bss_request "$paramter" && status=0 || status=1
            if [ $status -gt 0 ]
            then
                print_log "------ [新装总机]失败,无法生成clientinfo" error
                let "totalFailTmp++"
                return 1
            fi
            paramter=`cat testfile/hb_NumberInfo.xml|tr "\n" " "`
            paramter=${paramter/EMIC_NEED_REPLACE_EPCODE/$epCode}
            paramter=${paramter/EMIC_NEED_REPLACE_OPERATE/"createswitchboard"}
            paramter=${paramter/EMIC_NEED_REPLACE_NUMBER/$number}
            paramter=${paramter/EMIC_NEED_REPLACE_PLANCODE/39992072}
            paramter=${paramter/EMIC_NEED_REPLACE_USERNUMBER/20}
            paramter=${paramter/EMIC_NEED_REPLACE_SWITCHNUMBER/}
            ;; 
        jiangsu)
            paramter="Operate=createswitchboard&EpName=${epName}&Number=${number}&PlanCode=99033079"
            ;;
        shaanxi)
            paramter="Operate=createswitchboard&EpName=${epName}&Number=${number}&PlanCode=96777"
            ;;
        *)
            paramter="Operate=createswitchboard&EpName=${epName}&Number=${number}"
            ;;
    esac
    send_bss_request "$paramter" && status=0 || status=1
    if [ $status -gt 0 ]
    then
        # 发送请求失败，或返回失败
        print_log "------ [新装总机]失败" error
        let "totalFailTmp++"
    else
        # 任务成功，检查数据,sleep 5秒后再检查数据
        sleep 5 
        sql=${sql_count_mt_pubaccount/EMIC_NEED_REPLACE_AREACODE/$areacode}
        sql=${sql/EMIC_NEED_REPLACE_OUTSIDENUMBER/$test_switch_number}
        resultFile=`make_tmp_file ".result"`
        mysql_host="$maintenance_ip"
        emic_eval_mysql "$sql" "$resultFile" && status=0 || status=1
        if [ $status -gt 0 ]
        then 
            print_log "------ [新装总机]数据检查失败 " "error"
            let "totalFailTmp++"
        else
            checkCount=`sed -n '$p' $resultFile | awk '{print $1}'`
            #echo "count:$checkCount"
            if [ $checkCount -gt 0 ]
            then
                status=0
                print_log "------ [新装总机]成功" info
                let "totalSuccessTmp++"
            else
                print_log "------ [新装总机]未找到创建的外线号码 " "error"
                let "totalFailTmp++"
            fi   
        fi
        rm $resultFile -rf
    fi
    return $status
}
