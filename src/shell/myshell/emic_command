######################################
# 
# 脚本名称: emic_command
#
# 目的:
#    1、执行命令工具类
#    2、获取命令执行结果
#    3、获取命令返回值
# 依赖：
#    1、emic_utils
#    2、emic_log
#
# 注意事项：
#    不能单独执行，通过source包含
# 作者:cxl
# 
######################################

emic_command(){
    command -v emic_utils >/dev/null 2>&1
    retVal=$?
    if [ $retVal -gt 0 ] 
    then 
        emic_echo_fail "依赖于emic_utils文件"
        return $retVal
    fi
    command -v emic_log >/dev/null 2>&1
    retVal=$?
    if [ $retVal -gt 0 ] 
    then 
        emic_echo_fail "依赖于emic_log文件"
        return $retVal
    fi
    return $retVal
}
# ----------------------------
# 执行命令行并返回结果
# 将错误打印到标准输出
# ----------------------------
emic_eval_command(){
    #echo "in emic_eval_command ** $1 **"
    if [ -z "$1" ] 
    then 
        emic_echo_fail "未输入需执行的命令"
        return 1
    fi
    local status=1
    local resultFile=`make_tmp_file ".tmp"`
    eval "$1" >$resultFile 2>&1 && status=0 || status=1 

    local echoMsg="执行命令 ** $1 **"
    local logMsg
    local level="DEBUG"

    if [ $status -gt 0 ]
    then
        logMsg="$echoMsg ** ${FAIL_VAL} **"
        echoMsg="$echoMsg ** ${FAIL_MSG} **"
        level="ERROR"
    else
        logMsg="$echoMsg ** ${OK_VAL} **"
        echoMsg="$echoMsg ** ${OK_MSG} **"
    fi
    echo -e "$echoMsg"
    emic_log "$logMsg" 

    if [ -n "$2" ]
    then
        local result=`cat $resultFile`  
        if [ -n "$2" ] && [ -f "$2" ] ; then echo -e "$result" > $2 ; fi   
        if [ "$level" = "ERROR" ] && [ -n "$result" ]; then emic_log "$result" "$level" ; fi
    fi
 
    # 删除临时文件
    if [ -f "$resultFile" ]
    then
        rm "$resultFile" -rf >/dev/null 2>&1
        emic_log "执行删除临时文件命令 ** rm $resultFile -rf >/dev/null 2>&1 **" $level
    fi
    #echo "status:$status"
    return $status
}

# ----------------------------
# 执行mysql命令行并返回结果
# ----------------------------
emic_eval_mysql(){
    local status=1
    local cmdLine="mysql -u'$mysql_user' -p'$mysql_pwd' -h "$mysql_host" --local-infile=1 -e \"$1\"" 
    local file=""
    if [ -n "$2" ] && [ -f "$2" ]; then file=$2; fi
    #echo "in emic_eval_mysql"
    emic_eval_command "$cmdLine" "$file" && status=0 || status=1 
    return $status
}

